%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: C:\Users\M\Desktop\resultmat.eps
%%CreationDate: 12/22/2021  18:05:21
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   553
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   553
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

    0     0  5039  3780 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 3081 3905 0 0 -3081 655 3364 4 MP
PP
-3905 0 0 3081 3905 0 0 -3081 655 3364 5 MP stroke
4 w
DO
SO
6 w
0 sg
 655  283 mt 4560  283 L
 655 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 655 3364 mt  655  283 L
 655 3364 mt 4560 3364 L
 655 3364 mt  655  283 L
 655 3364 mt  655 3324 L
 655  283 mt  655  322 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 622 3509 mt 
(0) s
1436 3364 mt 1436 3324 L
1436  283 mt 1436  322 L
1336 3509 mt 
(200) s
2217 3364 mt 2217 3324 L
2217  283 mt 2217  322 L
2117 3509 mt 
(400) s
2998 3364 mt 2998 3324 L
2998  283 mt 2998  322 L
2898 3509 mt 
(600) s
3779 3364 mt 3779 3324 L
3779  283 mt 3779  322 L
3679 3509 mt 
(800) s
4560 3364 mt 4560 3324 L
4560  283 mt 4560  322 L
4427 3509 mt 
(1000) s
 655 3364 mt  694 3364 L
4560 3364 mt 4520 3364 L
 554 3408 mt 
(0) s
 655 2923 mt  694 2923 L
4560 2923 mt 4520 2923 L
 454 2967 mt 
(0.1) s
 655 2483 mt  694 2483 L
4560 2483 mt 4520 2483 L
 454 2527 mt 
(0.2) s
 655 2043 mt  694 2043 L
4560 2043 mt 4520 2043 L
 454 2087 mt 
(0.3) s
 655 1603 mt  694 1603 L
4560 1603 mt 4520 1603 L
 454 1647 mt 
(0.4) s
 655 1163 mt  694 1163 L
4560 1163 mt 4520 1163 L
 454 1207 mt 
(0.5) s
 655  723 mt  694  723 L
4560  723 mt 4520  723 L
 454  767 mt 
(0.6) s
 655  283 mt  694  283 L
4560  283 mt 4520  283 L
 454  327 mt 
(0.7) s
 655  283 mt 4560  283 L
 655 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 655 3364 mt  655  283 L
gs 655 283 3906 3082 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
4 108 4 59 4 -121 4 135 4 -157 4 112 4 -73 4 162 
4 -166 4 60 3 -52 4 -42 4 185 4 -11 4 -20 4 159 
4 -293 4 96 4 -65 4 -16 4 106 3 -142 4 -25 4 97 
4 -47 4 115 4 -70 4 -48 4 25 4 30 4 -44 3 -61 
4 120 4 112 4 -39 4 17 4 -53 4 -39 4 30 4 11 
4 12 4 131 3 -177 4 35 4 -58 4 -44 4 67 4 -2 
4 72 4 -248 4 215 4 40 3 -35 4 58 4 -21 4 -104 
4 2 4 -227 4 288 4 -157 4 138 4 -26 4 12 3 7 
4 97 4 -163 4 17 4 -111 4 2 4 82 4 41 4 11 
4 -111 3 -36 4 150 4 -74 4 64 4 46 4 -3 4 -59 
4 -51 4 50 4 22 4 -46 3 -21 4 55 4 104 4 -128 
4 26 4 41 4 -2 4 -104 4 167 4 -36 3 -41 4 70 
4 -80 4 -17 4 27 4 7 4 -3 4 -76 4 101 4 47 
4 -135 3 22 4 81 4 -220 4 161 4 -18 4 226 4 -245 
4 91 4 -7 4 -17 3 -132 4 241 4 -301 4 212 4 -23 
4 -137 4 92 4 3 4 168 4 -12 4 -219 3 73 4 88 
4 -129 4 -18 4 210 4 -154 4 140 4 -99 4 17 4 -33 
3 -33 4 100 4 -23 4 -74 4 -54 4 131 4 -80 4 -74 
4 -44 4 23 4 126 3 44 4 -8 4 -80 4 101 4 -184 
4 148 4 -34 4 -18 4 -34 4 60 3 -18 4 -8 4 -97 
4 217 4 77 4 -182 4 24 4 -145 4 182 4 13 4 29 
3 -71 4 -231 4 104 4 50 4 -45 4 -99 4 248 4 61 
4 -157 4 83 3 40 4 -46 4 -77 4 88 4 -83 4 19 
4 -122 4 203 4 84 4 -73 4 -63 3 106 4 -214 4 68 
4 73 4 -95 4 -20 4 167 4 -90 4 -25 4 -8 3 63 
4 -85 4 80 4 -130 4 130 4 19 4 -91 4 119 4 -19 
4 -187 4 176 3 -81 4 109 4 -8 4 -31 4 42 4 -20 
4 -87 4 42 4 -104 4 121 4 60 3 -93 4 -139 4 14 
4 93 4 -20 4 -42 4 94 4 48 4 -8 4 -83 3 -26 
4 -107 4 181 4 38 4 8 4 -49 4 107 4 -95 4 -20 
4 26 4 -38 3 -44 4 26 4 44 4 -61 4 20 4 56 
4 -21 4 121 4 -121 4 133 3 -139 4 -26 4 233 4 -221 
4 38 4 -27 4 -68 4 80 4 -62 4 176 4 -45 3 -266 
4 116 4 -39 4 231 4 -219 4 159 4 -39 4 178 4 -147 
4 27 3 21 4 22 4 -216 4 131 4 -16 4 10 4 125 
4 -40 4 4 4 -194 4 102 3 9 4 -163 4 157 4 89 
4 -120 4 77 4 -152 4 41 4 46 4 -9 3 16 4 40 
4 3 4 -147 4 179 3392 1078 300 MP stroke
4 -211 4 73 4 9 4 -180 4 98 4 79 3 168 4 -162 
4 54 4 29 4 -29 4 112 4 -246 4 -10 4 67 4 241 
3 -42 4 -202 4 -36 4 94 4 100 4 -55 4 10 4 87 
4 -204 4 133 4 -173 3 -36 4 219 4 4 4 69 4 -89 
4 -108 4 29 4 63 4 -3 4 -50 3 -169 4 189 4 -70 
4 57 4 56 4 -50 4 -43 4 -10 4 130 4 -70 4 17 
3 -118 4 91 4 -31 4 139 4 -112 4 -85 4 79 4 105 
4 -160 4 154 3 -182 4 72 4 -45 4 128 4 -197 4 149 
4 10 4 -121 4 211 4 -52 4 4 3 -80 4 87 4 -136 
4 -4 4 123 4 3 4 -172 4 116 4 -3 4 32 3 39 
4 -153 4 181 4 47 4 -82 4 18 4 -226 4 68 4 -11 
4 105 4 90 3 -112 4 76 4 -170 4 98 4 -55 4 69 
4 40 4 -120 4 91 4 70 3 -62 4 -122 4 11 4 -77 
4 107 4 70 4 26 4 -78 4 115 4 -130 4 3 3 169 
4 -236 4 -27 4 237 4 -139 4 177 4 -132 4 117 4 -117 
4 -87 4 11 3 -19 4 80 4 34 4 -103 4 42 4 34 
4 -19 4 135 4 -73 4 -151 3 135 4 51 4 -66 4 -136 
4 105 4 -137 4 270 4 28 4 -12 4 -169 4 -83 3 185 
4 -106 4 91 4 -68 4 12 4 12 4 20 4 60 4 -12 
4 69 3 -318 4 213 4 -92 4 -53 4 44 4 4 4 240 
4 -110 4 -200 4 192 4 -36 3 -37 4 -111 4 218 4 4 
4 -277 4 120 4 79 4 54 4 -146 4 -38 3 272 4 -264 
4 105 4 206 4 -105 4 -37 4 -30 4 -174 4 225 4 -4 
4 -47 3 -320 4 175 4 141 4 -124 4 -5 4 73 4 -65 
4 -47 4 125 4 5 3 13 4 240 4 -153 4 -144 4 144 
4 -109 4 136 4 -75 4 49 4 -40 4 -182 3 156 4 13 
4 -102 4 67 4 -41 4 167 4 -221 4 158 4 -95 4 -23 
3 250 4 -86 4 -123 4 32 4 78 4 -32 4 -152 4 -134 
4 143 4 23 4 274 3 -395 4 172 4 -163 4 23 4 267 
4 -117 4 23 4 -14 4 175 4 -184 3 -53 4 -43 4 72 
4 72 4 -5 4 -72 4 -188 4 323 4 -24 4 5 4 -4 
3 34 4 -102 4 83 4 93 4 -112 4 -143 4 25 4 -85 
4 -84 4 144 3 184 4 -135 4 15 4 -5 4 -145 4 75 
4 106 4 -66 4 258 4 -350 4 229 3 -5 4 -117 4 128 
4 -200 4 -16 4 202 4 -285 4 57 4 202 4 -130 3 5 
4 131 4 -184 4 184 4 90 4 -15 4 -493 4 334 4 69 
4 27 4 -15 3 -49 4 60 4 -81 4 60 4 -92 4 -60 
4 5 4 -17 4 60 2224 1196 300 MP stroke
4 28 3 -39 4 -16 4 -17 4 -39 4 105 4 6 4 72 
4 -72 4 162 4 -72 4 -74 3 -73 4 153 4 -96 4 17 
4 -6 4 -97 4 17 4 224 4 -75 4 -28 4 110 3 -308 
4 250 4 -75 4 -135 4 41 4 53 4 -137 4 386 4 -125 
4 -244 3 269 4 -210 4 186 4 -138 4 -54 4 18 4 151 
4 -140 4 -238 4 214 4 104 3 -68 4 -6 4 6 4 43 
4 -156 4 144 4 -245 4 194 4 -6 4 -32 3 82 4 286 
4 -146 4 -185 4 19 4 -6 4 -213 4 225 4 202 4 -137 
4 7 3 -20 4 204 4 -111 4 -86 4 -20 4 -246 4 220 
4 -128 4 127 4 -6 3 209 4 -128 4 47 4 -33 4 225 
4 -211 4 -48 4 34 4 77 4 -298 4 159 3 -216 4 230 
4 232 4 -62 4 -290 4 120 4 -92 4 164 4 93 4 -193 
3 -195 4 238 4 -94 4 -212 4 372 4 -109 4 36 4 52 
4 23 4 -97 4 23 3 112 4 23 4 -113 4 38 4 -7 
4 -144 4 68 4 -268 4 299 4 -116 3 240 4 -240 4 194 
4 -38 4 -134 4 87 4 -87 4 -135 4 294 4 152 4 -119 
3 -234 4 235 4 -268 4 220 4 57 4 -221 4 41 4 41 
4 58 4 76 3 -8 4 -277 4 -262 4 633 4 -313 4 196 
4 77 4 -317 4 77 4 -26 4 -27 3 8 4 -202 4 430 
4 -238 4 26 4 80 4 45 4 -45 4 154 4 -244 3 8 
4 -119 4 63 4 120 4 212 4 -64 4 -233 4 178 4 -122 
4 9 4 218 3 -237 4 219 4 -9 4 -163 4 106 4 -223 
4 322 4 30 4 -28 4 -89 3 -168 4 9 4 -10 4 90 
4 92 4 72 4 -51 4 -9 4 176 4 -258 4 -52 3 -11 
4 242 4 -517 4 264 4 -53 4 289 4 -398 4 400 4 -228 
4 77 3 -55 4 11 4 212 4 -78 4 -369 4 484 4 -509 
4 101 4 263 4 81 4 -126 3 -384 4 -37 4 598 4 -152 
4 -345 4 202 4 108 4 -108 4 133 4 -354 4 159 3 259 
4 -161 4 -13 4 -189 4 315 4 -368 4 37 4 114 4 220 
4 -247 3 -119 4 65 4 38 4 333 4 -147 4 311 4 -283 
4 205 4 -205 4 -345 4 457 3 156 4 -182 4 72 4 16 
4 -329 4 -218 4 479 4 -219 4 339 4 -192 3 -253 4 -137 
4 316 4 -168 4 353 4 -169 4 172 4 -46 4 -331 4 15 
4 368 3 -338 4 80 4 -49 4 -150 4 315 4 -16 4 -186 
4 289 4 -498 4 292 3 122 4 124 4 -336 4 -234 4 593 
4 -89 4 -91 4 -166 4 17 4 169 4 -436 3 590 4 -558 
4 172 4 607 4 -333 4 21 4 22 4 -142 4 -226 4 185 
3 272 4 -315 4 148 1057 1099 300 MP stroke
4 -236 4 238 4 -154 4 66 4 67 4 -158 4 205 4 163 
3 73 4 27 4 -546 4 -317 4 313 4 -27 4 522 4 29 
4 -226 4 27 3 -235 4 450 4 -506 4 351 4 -25 4 -638 
4 473 4 257 4 -488 4 26 4 324 3 -330 4 89 4 -33 
4 532 4 -217 4 164 4 -554 4 164 4 -35 4 -174 3 310 
4 -319 4 176 4 -479 4 475 4 -115 4 111 4 -120 4 596 
4 -360 4 -623 3 369 4 470 4 -656 4 216 4 591 4 -601 
4 904 4 -34 4 -436 4 -456 3 256 4 -161 4 -169 4 161 
4 53 4 176 4 62 4 444 4 -1084 4 -215 4 458 3 -80 
4 208 4 -80 4 384 4 414 4 -909 4 778 4 -73 4 -654 
4 687 3 -924 4 1184 4 -312 4 -348 4 389 4 -664 4 1009 
4 -1048 4 822 4 -875 4 -233 3 1040 4 -195 4 305 4 -235 
4 -315 4 440 4 -1540 4 367 4 733 4 -2201 658 3364 103 MP stroke
gr

c8
0 sg
 853  188 mt 
(Average tail outcome vs. number of tosses in coin toss expe\
riment) s
2136 3652 mt 
(Number of tosses) s
 372 2383 mt  -90 rotate
(Average tail outcome) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
